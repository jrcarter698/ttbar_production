# feynmanrules.yaml
#
# This file is part of the package Reduze2
# 
#
# FUNCTIONS to be used in the FEYNMAN RULES
#
#
# Prop(p,m_sq)   = 1/( p^2 - m_sq )  # propagator (needs squared mass)
# SP(p,q)        = p*q               # lorentz invariant scalar prodct
# Mom(p,mu)      = p_mu              # mu-th component of momentum p
# Ga(mu)         = gamma_mu          # gamma matrix (clifford)
# GaS(p)         = p-slash           # p_mu*gamma^mu (clifford)
# GaOne(1)                           # the identity matrix (clifford)
# ColT(a,i,j)    = T^a_i_j           # generators of su(N) 
# ColF3(a,b,c)   = f(a,b,c)          # structure constants of su(N)
# ColF4(a,b,c,d) = f(a,b,e)*f(c,d,e) #
# delta_f(i,j)                       # the N dimensional Kronecker
# delta_a(a,b)                       # the N^2-1 dimensional Kronecker
# metric_l(mu1,mu2)                  # the d-dimensional metric tensor
#
# metric_l_diff(mu1,mu2,mu3,mu4) =
#      metric_l(mu1,mu2)*metric_l(mu3,mu4) - metric_l(mu1,mu4)*metric_l(mu2,mu3)
#
# external leg functions:
#
# U(mom,mass,i)                      # incoming spinor with color index 'i' of the fundamental rep. of SU(N)
# Ubar(mom,mass,i)                   # outgoing spinor
# V(mom,mass,i)                      # outgoing anti spinor
# Vbar(mom,mass,i)                   # incoming anti spinor
#
# Pol_gluon(mom,mass,mu,a,ortho)     # incoming gluon
# PolC_gluon(mom,mass,mu,a,ortho)    # outgoing gluon
# Pol_ghost(mom,mass,a)              # incoming ghost, outgoing anti-ghost
# PolC_ghost(mom,mass,a)             # outgoing ghost, incoming anti-ghost
# Pol_photon(mom,mass,mu)            # incoming photon
# PolC_photon(mom,mass,mu)           # outgoing photon
#
# N.B.
# Non commutative products like GaS(p)*GaS(q) are not supported in the Feynman rules.
#


# Feynman rules
# QCD part from textbook of Peskin and Schroeder
# QED coupling follows Denner conventions
---
feynmanrules:

## These symbols should be defined in the file global.yaml
##  # symbols
##  coupling_constants: [ g, e ]
##  su_n_dimensions:
##    fundamental: Nc
##    adjoint: Na   # = Nc^2 - 1

  # template symbols
  momentum_prefix: mom
  mass_prefix:     mass
  polarization_orthogonal_vector_prefix: ortho
  index_prefixes:
    lorentz: mu
    color_a: a
    color_f: i
  max_vertex_degree: 4

# will create the template parameters: mom1,mom2,mom3,mom4, mass1...mass4, mu1...mu4, a1...a4, i1...i4
# the templated parameters with integer suffix 'i' as e.g. mom1, mu2 refer exactly to
# the momentum of field number 1 or lorentz index of field number 2.  

  external_legs:
    in-quark1:    "U(mom1,mass1,i1)"
    in-qbar1:     "Vbar(mom1,mass1,i1)"
    in-quark2:    "U(mom1,mass1,i1)"
    in-qbar2:     "Vbar(mom1,mass1,i1)"
    in-gluon:     "Pol_gluon(mom1,mass1,mu1,a1,ortho1)"
    in-ghost:     "Pol_ghost(mom1,mass1,a1)"
    in-Ghost:     "PolC_ghost(mom1,mass1,a1)"
    in-photon:    "Pol_photon(mom1,mass1,mu1)"
    in-electron:  "U(mom1,mass1,0)"
    in-positron:  "Vbar(mom1,mass1,0)"

    out-quark1:   "Ubar(mom1,mass1,i1)"
    out-qbar1:    "V(mom1,mass1,i1)"
    out-quark2:   "Ubar(mom1,mass1,i1)"
    out-qbar2:    "V(mom1,mass1,i1)"
    out-gluon:    "PolC_gluon(mom1,mass1,mu1,a1,ortho1)"
    out-ghost:    "PolC_ghost(mom1,mass1,a1)"
    out-Ghost:    "Pol_ghost(mom1,mass1,a1)"
    out-photon:   "PolC_photon(mom1,mass1,mu1)"
    out-electron: "Ubar(mom1,mass1,0)"
    out-positron: "V(mom1,mass1,0)"

  propagators:
    quark1_qbar1:      "I*(GaS(mom1) + mass1*GaOne(1)) * Prop(mom1, mass1^2) * delta_f(i1,i2)"
    quark2_qbar2:      "I*(GaS(mom1) + mass1*GaOne(1)) * Prop(mom1, mass1^2) * delta_f(i1,i2)"
    gluon_gluon:       "-I * delta_a(a1, a2) * metric_l(mu1, mu2) * Prop(mom1, 0)"
    ghost_Ghost:       "I * Prop(mom1, 0) * delta_a(a1, a2)"
    photon_photon:     "-I * metric_l(mu1, mu2) * Prop(mom1, 0)"
    electron_positron: "I*(GaS(mom1) + mass1*GaOne(1)) * Prop(mom1, mass1^2)"

  vertices:
    qbar1_gluon_quark1:       "5^(1/3) * I * g * Ga(mu2) * ColT(a2, i1, i3)"
    qbar2_gluon_quark2:       "I * g * Ga(mu2) * ColT(a2, i1, i3)"
    gluon_gluon_gluon:        "g*ColF3(a1,a2,a3) * ( metric_l(mu1, mu2) * Mom(mom1 - mom2, mu3)
                                   + metric_l(mu2, mu3) * Mom(mom2 - mom3, mu1)
	                               + metric_l(mu3, mu1) * Mom(mom3 - mom1, mu2) )"
    gluon_gluon_gluon_gluon:  "-I*g^2 * (  ColF4(a1, a2, a3, a4) * metric_l_diff(mu1,mu3,mu2,mu4)
                                   + ColF4(a1, a3, a2, a4) * metric_l_diff(mu1,mu2,mu3,mu4)
                                   + ColF4(a1, a4, a2, a3) * metric_l_diff(mu1,mu2,mu4,mu3) )"
    Ghost_gluon_ghost:        "g * ColF3(a1, a2, a3) * Mom(mom1, mu2)"
    positron_photon_electron: "I * e * Ga(mu2)"


  # polarization sums: [ pol, polc, val ]  means  pol*polc = val
  # available template symbols for polarization sums: mom; mass; ortho; i,i1,i2; a,a1,a2; mu,mu1,mu2;

  polarization_sums:
    - [ "U(mom,mass,i1)", "Ubar(mom,mass,i2)", "(GaS(mom) + mass * GaOne(1)) * delta_f(i1,i2)" ]
    - [ "V(mom,mass,i1)", "Vbar(mom,mass,i2)", "(GaS(mom) - mass * GaOne(1)) * delta_f(i1,i2)" ]
    - [ "Pol_photon(mom,mass,mu1)", "PolC_photon(mom,mass,mu2)", "-metric_l(mu1, mu2)" ]
    - [ "Pol_ghost(mom,mass,a1)",   "PolC_ghost(mom,mass,a2)",   "I*delta_a(a1,a2)" ]
    - [ "Pol_gluon(mom,mass,mu1,a1,0)", "PolC_gluon(mom,mass,mu2,a2,0)", "-delta_a(a1,a2) * metric_l(mu1,mu2)" ]
    - [ "Pol_gluon(mom,mass,mu1,a1,ortho)", "PolC_gluon(mom,mass,mu2,a2,ortho)",
                             "delta_a(a1,a2) * ( - metric_l(mu1,mu2)
                                  + ( Mom(mom,mu1) * Mom(ortho,mu2) + Mom(ortho,mu1) * Mom(mom,mu2) ) / SP(mom,ortho)
                                  + SP(ortho,ortho) * Mom(mom,mu1) * Mom(mom,mu2) / SP(mom,ortho)^2 )" ]





