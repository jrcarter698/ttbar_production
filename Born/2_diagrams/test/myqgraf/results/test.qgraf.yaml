
#
# file generated by qgraf-3.6.6
#

---
qgraf_globals:
  - "qgraf_version = qgraf-3.6.6"
  - "output = 'test.qgraf.yaml' ;"
  - "style = 'reduze.sty' ;"
  - "model = 'test_reduze';"
  - "in =test[p1],test[p2];"
  - "out=test[p3],test[p4];"
  - "loops=0;"
  - "loop_momentum = k;"
  - "options =  onshell, notadpole,nosigma;"


#
# - external_legs / propagators: 2-element sequence
#       [ [in vertex, out vertex], feynman_rule_id: [field(s)] ]
#     a field has 6 entries:
#       [particle name, field type, commutator sign, momentum, mass, field index]
#     where the field types are: 1=incoming, 2=outgoing, 3=internal
# - vertices: 1-element sequence
#       [feynman_rule_id: [fields]
#
# - comments
#   * The momenta directions of the initial state particles are
#     incoming and the momenta of the final state particles are
#     outgoing.
#   * The momenta of the fields around a vertex are all ingoing
#     to that vertex.
#   * For a propagator, the first entry in the fields list specifies
#     the particle type and the propagator momentum along the particle
#     flow.
#   * Particle flows are directed from higher to lower field indices,
#     such that fermion chains will usually be assembled from lower
#     to higher field indices.
#   * When glueing together a vertex and a propagator at a given field
#     index, the particle names in the respective first entries of the
#     field specifications coincide.
#

---
diagram:
  name: 1
  external_legs:
    - [ [-1, 1], in-test: [[test, 1, +1, p1, m, -1]] ]
    - [ [-2, 1], in-test: [[test, 1, +1, p2, m, -3]] ]
    - [ [2, -3], out-test: [[test, 2, +1, p3, m, -2]] ]
    - [ [2, -4], out-test: [[test, 2, +1, p4, m, -4]] ]
  propagators:
    - [ [2, 1], test_test: [[test, 3, +1, -p1-p2, m, 1], [test, 3, +1, p1+p2, m, 2]] ]
  vertices:
    - [ test_test_test: [[test, 1, +1, p1, m, -1], [test, 1, +1, p2, m, -3], [test, 3, +1, -p1-p2, m, 1]] ]
    - [ test_test_test: [[test, 2, +1, -p3, m, -2], [test, 2, +1, -p4, m, -4], [test, 3, +1, p1+p2, m, 2]] ]
  symmetry_factor: 1
  num_legs_in: 2
  num_legs_out: 2
  num_loops: 0
  num_propagators: 1
  num_vertices: 2

---
diagram:
  name: 2
  external_legs:
    - [ [-1, 1], in-test: [[test, 1, +1, p1, m, -1]] ]
    - [ [-2, 2], in-test: [[test, 1, +1, p2, m, -3]] ]
    - [ [1, -3], out-test: [[test, 2, +1, p3, m, -2]] ]
    - [ [2, -4], out-test: [[test, 2, +1, p4, m, -4]] ]
  propagators:
    - [ [2, 1], test_test: [[test, 3, +1, -p1+p3, m, 1], [test, 3, +1, p1-p3, m, 2]] ]
  vertices:
    - [ test_test_test: [[test, 1, +1, p1, m, -1], [test, 2, +1, -p3, m, -2], [test, 3, +1, -p1+p3, m, 1]] ]
    - [ test_test_test: [[test, 1, +1, p2, m, -3], [test, 2, +1, -p4, m, -4], [test, 3, +1, p1-p3, m, 2]] ]
  symmetry_factor: 1
  num_legs_in: 2
  num_legs_out: 2
  num_loops: 0
  num_propagators: 1
  num_vertices: 2

---
diagram:
  name: 3
  external_legs:
    - [ [-1, 1], in-test: [[test, 1, +1, p1, m, -1]] ]
    - [ [-2, 2], in-test: [[test, 1, +1, p2, m, -3]] ]
    - [ [2, -3], out-test: [[test, 2, +1, p3, m, -2]] ]
    - [ [1, -4], out-test: [[test, 2, +1, p4, m, -4]] ]
  propagators:
    - [ [2, 1], test_test: [[test, 3, +1, -p1+p4, m, 1], [test, 3, +1, p1-p4, m, 2]] ]
  vertices:
    - [ test_test_test: [[test, 1, +1, p1, m, -1], [test, 2, +1, -p4, m, -4], [test, 3, +1, -p1+p4, m, 1]] ]
    - [ test_test_test: [[test, 1, +1, p2, m, -3], [test, 2, +1, -p3, m, -2], [test, 3, +1, p1-p4, m, 2]] ]
  symmetry_factor: 1
  num_legs_in: 2
  num_legs_out: 2
  num_loops: 0
  num_propagators: 1
  num_vertices: 2

