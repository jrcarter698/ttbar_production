# feynmanrules.yaml
#
# This file is part of the package Reduze2
# 
#
# FUNCTIONS to be used in the FEYNMAN RULES
#
#
# Prop(p,m_sq)   = 1/( p^2 - m_sq )  # propagator (needs squared mass)
# SP(p,q)        = p*q               # lorentz invariant scalar prodct
# Mom(p,mu)      = p_mu              # mu-th component of momentum p
# Ga(mu)         = gamma_mu          # gamma matrix (clifford)
# GaS(p)         = p-slash           # p_mu*gamma^mu (clifford)
# GaOne(1)                           # the identity matrix (clifford)
# ColT(a,i,j)    = T^a_i_j           # generators of su(N) 
# ColF3(a,b,c)   = f(a,b,c)          # structure constants of su(N)
# ColF4(a,b,c,d) = f(a,b,e)*f(c,d,e) #
# delta_f(i,j)                       # the N dimensional Kronecker
# delta_a(a,b)                       # the N^2-1 dimensional Kronecker
# metric_l(mu1,mu2)                  # the d-dimensional metric tensor
#
# metric_l_diff(mu1,mu2,mu3,mu4) =
#      metric_l(mu1,mu2)*metric_l(mu3,mu4) - metric_l(mu1,mu4)*metric_l(mu2,mu3)
#
# external leg functions:
#
# U(mom,mass,i)                      # incoming spinor with color index 'i' of the fundamental rep. of SU(N)
# Ubar(mom,mass,i)                   # outgoing spinor
# V(mom,mass,i)                      # outgoing anti spinor
# Vbar(mom,mass,i)                   # incoming anti spinor
#
# Pol_gluon(mom,mass,mu,a,ortho)     # incoming gluon
# PolC_gluon(mom,mass,mu,a,ortho)    # outgoing gluon
# Pol_ghost(mom,mass,a)              # incoming ghost, outgoing anti-ghost
# PolC_ghost(mom,mass,a)             # outgoing ghost, incoming anti-ghost
# Pol_photon(mom,mass,mu)            # incoming photon
# PolC_photon(mom,mass,mu)           # outgoing photon
#
# N.B.
# Non commutative products like GaS(p)*GaS(q) are not supported in the Feynman rules.
#


# Feynman rules
# QCD part from textbook of Peskin and Schroeder
# QED coupling follows Denner conventions
---
feynmanrules:

## These symbols should be defined in the file global.yaml
##  # symbols
##  coupling_constants: [ g, e ]
##  su_n_dimensions:
##    fundamental: Nc
##    adjoint: Na   # = Nc^2 - 1
## Additionally, we need the EW parameters

  # template symbols
  momentum_prefix: mom
  mass_prefix:     mass
  polarization_orthogonal_vector_prefix: ortho
  index_prefixes:
    lorentz: mu
    color_a: a
    color_f: i
  max_vertex_degree: 4

# will create the template parameters: mom1,mom2,mom3,mom4, mass1...mass4, mu1...mu4, a1...a4, i1...i4
# the templated parameters with integer suffix 'i' as e.g. mom1, mu2 refer exactly to
# the momentum of field number 1 or lorentz index of field number 2.  

  external_legs:
    in-up:	  "U(mom1,mass1,i1)"
    in-ubar:      "Vbar(mom1,mass1,i1)"
    in-down:      "U(mom1,mass1,i1)"
    in-dbar:      "Vbar(mom1,mass1,i1)"
    in-top:	  "U(mom1,mass1,i1)"
    in-tbar:      "Vbar(mom1,mass1,i1)"
    in-bottom:	  "U(mom1,mass1,i1)"
    in-bbar:      "Vbar(mom1,mass1,i1)"
    in-gluon:     "Pol_gluon(mom1,mass1,mu1,a1,ortho1)"
#    in-ghost:     "Pol_ghost(mom1,mass1,a1)"
#    in-Ghost:     "PolC_ghost(mom1,mass1,a1)"

    out-up:       "Ubar(mom1,mass1,i1)"
    out-ubar:     "V(mom1,mass1,i1)"
    out-down:     "Ubar(mom1,mass1,i1)"
    out-dbar:     "V(mom1,mass1,i1)"
    out-top:      "Ubar(mom1,mass1,i1)"
    out-tbar:     "V(mom1,mass1,i1)"
    out-bottom:   "Ubar(mom1,mass1,i1)"
    out-bbar:     "V(mom1,mass1,i1)"
    out-gluon:    "PolC_gluon(mom1,mass1,mu1,a1,ortho1)"

  propagators:
    up_ubar:	       "I*(GaS(mom1) + mass1*GaOne(1)) * Prop(mom1, mass1^2) * delta_f(i1,i2)"
    down_dbar:         "I*(GaS(mom1) + mass1*GaOne(1)) * Prop(mom1, mass1^2) * delta_f(i1,i2)"
    top_tbar:          "I*(GaS(mom1) + mass1*GaOne(1)) * Prop(mom1, mass1^2) * delta_f(i1,i2)"
    bottom_bbar:       "I*(GaS(mom1) + mass1*GaOne(1)) * Prop(mom1, mass1^2) * delta_f(i1,i2)"
    gluon_gluon:       "-I * delta_a(a1, a2) * metric_l(mu1, mu2) * Prop(mom1, 0)"
#    ghost_Ghost:       "I * Prop(mom1, 0) * delta_a(a1, a2)"
    photon_photon:     "-I * metric_l(mu1, mu2) * Prop(mom1, 0)"
    Z_Z:	       "-I * (metric_l(mu1,mu2) - Mom(mom1, mu1) * Mom(mom1, mu2) / mass1^2) * Prop(mom1, mass1^2)"
    Wp_Wm:	       "-I * (metric_l(mu1,mu2) - Mom(mom1, mu1) * Mom(mom1, mu2) / mass1^2) * Prop(mom1, mass1^2)"
    higgs_higgs:       "I * Prop(mom1, mass1^2)"


    


  vertices:

#QCD vertices
    ubar_gluon_up:            "I * g * Ga(mu2) * ColT(a2, i1, i3)"
    dbar_gluon_down:          "I * g * Ga(mu2) * ColT(a2, i1, i3)"
    tbar_gluon_top:           "I * g * Ga(mu2) * ColT(a2, i1, i3)"
    bbar_gluon_bottom:        "I * g * Ga(mu2) * ColT(a2, i1, i3)"
    gluon_gluon_gluon:        "g*ColF3(a1,a2,a3) * ( metric_l(mu1, mu2) * Mom(mom1 - mom2, mu3)
                                   + metric_l(mu2, mu3) * Mom(mom2 - mom3, mu1)
	                               + metric_l(mu3, mu1) * Mom(mom3 - mom1, mu2) )"
    gluon_gluon_gluon_gluon:  "-I*g^2 * (  ColF4(a1, a2, a3, a4) * metric_l_diff(mu1,mu3,mu2,mu4)
                                   + ColF4(a1, a3, a2, a4) * metric_l_diff(mu1,mu2,mu3,mu4)
                                   + ColF4(a1, a4, a2, a3) * metric_l_diff(mu1,mu2,mu4,mu3) )"
#    Ghost_gluon_ghost:        "g * ColF3(a1, a2, a3) * Mom(mom1, mu2)"

#EW vertices

#The problem is in the Z-boson vertices
#Include an electroweak scheme to fix the parameters.
    ubar_photon_up:           "I * (2/3)*e * Ga(mu2) * delta_f(i1, i3)"
    dbar_photon_down:         "-I * (1/3)*e * Ga(mu2) * delta_f(i1, i3)"
    bbar_photon_bottom:       "-I * (1/3)*e * Ga(mu2) * delta_f(i1, i3)"
    tbar_photon_top:          "I * (2/3)*e * Ga(mu2) * delta_f(i1, i3)"
    ubar_Z_up:		      "I * e / 2 / sw / cw * Ga(mu2) * (vf * GaOne(1) - bf * GaOne(1)) * delta_f(i1, i3)"
    dbar_Z_down:	      "I * e / 2 / sw / cw * Ga(mu2) * (vf * GaOne(1) - bf * GaOne(1)) * delta_f(i1, i3)"
    bbar_Z_bottom:	      "I * e / 2 / sw / cw * Ga(mu2) * (vf * GaOne(1) - bf * GaOne(1)) * delta_f(i1, i3)"
    tbar_Z_top:		      "I * e / 2 / sw / cw * Ga(mu2) * (vf * GaOne(1) - bf * GaOne(1)) * delta_f(i1, i3)"

#V is a diagonal CKM.
    ubar_Wp_down:	      "I * e / 2 / 2^(1/2) / sw / cw * Ga(mu2) * (GaOne(1)) * V * delta_f(i1, i3)"
    dbar_Wm_up:	      	      "I * e / 2 / 2^(1/2) / sw / cw * Ga(mu2) * (GaOne(1)) * V * delta_f(i1, i3)"
    bbar_Wm_top:	      "I * e / 2 / 2^(1/2) / sw / cw * Ga(mu2) * (GaOne(1)) * V * delta_f(i1, i3)"
    tbar_Wp_bottom:	      "I * e / 2 / 2^(1/2) / sw / cw * Ga(mu2) * (GaOne(1)) * V * delta_f(i1, i3)"
    

#Vertex for the top and higgs.
    tbar_higgs_top:	      "-I*(mass1/v) * (x ) * delta_f(i1,i3)"

# For the first one, we will need to put a slash on the epsilon using the gluon vertex, then dot the other epsilon using the top vertex and the propagator.

# Propagators for the tensor structures:
  #Put in delta functions to get rid of the loop integrals
#    ten1_ten1:         "metric_l(mu1,mu2)"#Complete
#    ten2_ten2:         "metric_l(mu1,mu2)"#Complete
#    ten3_ten3:         "metric_l(mu1,mu2)"#Complete
#    ten4_ten4:         "GaOne(1)"#Complete
#    ten5_ten5:         "GaOne(1)"#Complete
#    ten6_ten6:         "metric_l(mu1,mu2)"#Complete
#    ten7_ten7:         "GaOne(1)"#Complete
#    ten8_ten8:         "metric_l(mu1,mu2)"#Complete
#    ten9_ten9:         "metric_l(mu1,mu2)"#Complete
#    ten10_ten10:       "metric_l(mu1,mu2)"#Complete
#    ten11_ten11:       "metric_l(mu1,mu2)"#Complete
#    ten12_ten12:       "GaOne(1)"#Complete
#    ten13_ten13:       "GaOne(1)"#Complete
#    ten14_ten14:       "metric_l(mu1,mu2)"#Complete
#    ten15_ten15:       "GaOne(1)"#Complete
#    ten16_ten16:       "metric_l(mu1,mu2)"#Complete
#    ten17_ten17:       "GaOne(1)"#Complete
#    ten18_ten18:       "metric_l(mu1,mu2)"#Complete

# Vertices for the tensor structures:#Figure out the index here
    tbar_ten1_top:            "Mom(mom3,mu2)"#Complete
#    gluon_ten1_gluon:	      "metric_l(mu3,mu2)*Ga(mu3)"#Complete
#    tbar_ten2_top:            "Mom(mom3,mu2)"#Complete
#    gluon_ten2_gluon:	      "metric_l(mu2,mu3)*Ga(mu1)"#Complete
#    tbar_ten3_ten3_top:       "Mom(mom4,mu2)*Mom(mom4,mu3)"#Complete
#    gluon_ten3_ten3_gluon:    "metric_l(mu1,mu2)*metric_l(mu3,mu4)*GaS(mom1)"#Complete
#    tbar_ten4_top:            "GaOne(1)"#Complete
#    gluon_ten4_gluon:	      "Ga(mu1)*Ga(mom1)*Ga(mu3)"#Complete
#    tbar_ten5_top:            "GaOne(1)"#Complete
#    gluon_ten5_gluon:	      "Ga(mu1)*Ga(mom1)*Ga(mu3)"#Complete
#    tbar_ten6_ten6_top:       "Mom(mom4,mu2)*Mom(mom4,mu3)"#Complete
#    gluon_ten6_ten6_gluon:    "metric_l(mu1,mu2)*metric_l(mu3,mu4)"#Complete
#    tbar_ten7_top:            "GaOne(1)"#Complete
#    gluon_ten7_gluon:	      "metric_l(mu1,mu3)"#Complete
##    tbar_ten8_top:            "Mom(mom3,mu2)"#Complete
#    gluon_ten8_gluon:	      "metric_l(mu1,mu2)*Ga(mu3)*GaS(mom1)"#Complete
#    tbar_ten9_top:            "Mom(mom3,mu2)"#Complete
#    gluon_ten9_gluon:	      "metric_l(mu3,mu2)*Ga(mu1)"#Put the gamma5 here
#    tbar_ten10_top:           "Mom(mom3,mu2)"#Complete
#    gluon_ten10_gluon:	      "metric_l(mu1,mu2)*Ga(mu3)"#Put the gamma5 here
#    tbar_ten11_ten11_top:     "Mom(mom4,mu2)*Mom(mom4,mu3)"#Complete
#    gluon_ten11_ten11_gluon:  "metric_l(mu1,mu2)*metric_l(mu3,mu4)*GaS(mom1)"#Put the gamma5 here
#    tbar_ten12_top:           "GaOne(1)"#Complete
#    gluon_ten12_gluon:	      "Ga(mu3)*Ga(mom1)*Ga(mu1)"#Put the gamma5 here
#    tbar_ten13_top:           "GaOne(1)"#Complete
#    gluon_ten13_gluon:	      "Ga(mu1)*Ga(mom1)*Ga(mu3)#Put the gamma5 here
#    tbar_ten14_ten14_top:     "Mom(mom4,mu2)*Mom(mom4,mu3)"#Complete
#    gluon_ten14_ten14_gluon:  "metric_l(mu1,mu2)*metric_l(mu3,mu4)"#Put the gamma5 here
#    tbar_ten15_top:           "GaOne(1)"#Complete
#    gluon_ten15_gluon:	      "metric_l(mu1,mu3)"#Put the gamma5 here
#    tbar_ten16_top:           "Mom(mom3,mu2)"#Complete
#    gluon_ten16_gluon:	      "metric_l(mu1,mu2)*Ga(mu3)*GaS(mom1)"#Put the gamma5 here
#    tbar_ten17_top:           "GaOne(1)"#Complete
#    gluon_ten17_gluon:	      "Ga(mu1)*Ga(mu2)"#Complete
#    tbar_ten18_top:           "Mom(mom3,mu2)"#Complete
#    gluon_ten18_gluon:	      "metric(mu2,mu3)*Ga(mu3)*GaS(mom1)"#Complete


  # polarization sums: [ pol, polc, val ]  means  pol*polc = val
  # available template symbols for polarization sums: mom; mass; ortho; i,i1,i2; a,a1,a2; mu,mu1,mu2;

  polarization_sums:

#Simply getting rid of the polarization sums causes an error; we need a different way
#of dealing with them.
    - [ "U(mom,mass,i1)", "Ubar(mom,mass,i2)", "(GaS(mom) + mass * GaOne(1)) * delta_f(i1,i2)" ]
    - [ "V(mom,mass,i1)", "Vbar(mom,mass,i2)", "(GaS(mom) - mass * GaOne(1)) * delta_f(i1,i2)" ]
#    - [ "Pol_photon(mom,mass,mu1)", "PolC_photon(mom,mass,mu2)", "-metric_l(mu1, mu2)" ]
#    - [ "Pol_ghost(mom,mass,a1)",   "PolC_ghost(mom,mass,a2)",   "I*delta_a(a1,a2)" ]
    - [ "Pol_gluon(mom,mass,mu1,a1,0)", "PolC_gluon(mom,mass,mu2,a2,0)", "-delta_a(a1,a2) * metric_l(mu1,mu2)" ]
#    - [ "Pol_gluon(mom,mass,mu1,a1,ortho)", "PolC_gluon(mom,mass,mu2,a2,ortho)",
#                             "delta_a(a1,a2) * ( - metric_l(mu1,mu2)
#                                  + ( Mom(mom,mu1) * Mom(ortho,mu2) + Mom(ortho,mu1) * Mom(mom,mu2) ) / SP(mom,ortho)
#                                  + SP(ortho,ortho) * Mom(mom,mu1) * Mom(mom,mu2) / SP(mom,ortho)^2 )" ]





